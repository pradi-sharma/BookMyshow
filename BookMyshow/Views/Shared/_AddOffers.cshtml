@model BookMyshow.Models.Offer
<h2 class="font-weight-bold " style="margin-left:20%">Add Offer</h2>
<style>

    .text-danger {
        font-weight: bold;
    }

    input[type=text], input[type=number] {
        border: 1px solid white;
        border-radius: 5px;
        font-size: 20px;
        width: 450px;
        background-color: white;
    }

        input[type=text]:focus, input[type=number]:focus {
            color: white;
        }

    .form-horizontal {
        background-image: url(../../Content/Images/download.jpg);
        background-repeat: no-repeat;
        background-size: cover;
        color: white;
        padding: 10px;
        border-radius: 20px;
        margin-left: 20%;
    }

    td, th {
        color: white;
        font-size: 10%;
    }

    table tr td a {
        background-color: white;
        font-size: 20px;
        padding: 5px;
        width: 200px;
        border-radius: 15px;
    }

    span {
        color: white;
        font-size: 20px;
    }
</style>

@using (Ajax.BeginForm("Addoffers", "AdminHome", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "result", InsertionMode = InsertionMode.Replace }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="width:600px" id="result">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.OfferName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OfferName, new { htmlAttributes = new { @class = "form-control", @required = "required", min = "2", max = "15" } })
                @Html.ValidationMessageFor(model => model.OfferName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control", min = 0, max = 50, oninput = "validity.valid||(value='');" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="btn btn-default" />
            </div>
        </div>
    </div>
}



<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
